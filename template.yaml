AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  config-lambda

  Sample SAM for AWS Config custom rule. This template creates a custom rule that checks whether the required tags are present on the resource.

Parameters:
  Region:
    Type: String
    Default: "eu-central-1"
    Description: AWS Region where the resources will be deployed

  TagsTableName:
    Type: String
    Default: TagsTable
    Description: DynamoDB table name for storing tags

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    LoggingConfig:
      LogFormat: JSON

Resources:
  RequiredTagsLambda:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: required-tags/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - x86_64
      Policies:
        - ResourceGroupsandTagEditorFullAccess
        - AWSLambdaBasicExecutionRole
        - AWSConfigRulesExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref TagsTableName

  AllowConfigInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt RequiredTagsLambda.Arn
      Principal: config.amazonaws.com

  ConfigurationRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      RoleARN: arn:aws:iam::300336075695:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true

  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: TwentyFour_Hours
      S3BucketName: !Sub config-bucket-${AWS::AccountId}
      SnsTopicARN: !Ref ConfigTopic

  RequiredTagsCustomConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: RequiredTagsCustomConfigRule
      Description: Checks whether the required tags are present on the resource
      EvaluationModes:
        - Mode: DETECTIVE
      MaximumExecutionFrequency: One_Hour
      Scope:
        TagKey: ObjectId
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !GetAtt RequiredTagsLambda.Arn
        SourceDetails:
          - EventSource: aws.config
            MessageType: ConfigurationItemChangeNotification

  TagsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TagsTableName
      AttributeDefinitions:
        - AttributeName: ObjectId
          AttributeType: S
      KeySchema:
        - AttributeName: ObjectId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  ConfigTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: ConfigTopic
      TopicName: ConfigTopic

  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub config-bucket-${AWS::AccountId}
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: ConfigBucket

  ConfigBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub 'arn:aws:s3:::${ConfigBucket}'
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub 'arn:aws:s3:::${ConfigBucket}/AWSLogs/${AWS::AccountId}/*'
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:GetBucketPolicy
            Resource: !Sub 'arn:aws:s3:::${ConfigBucket}'

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !Ref ApplicationResourceGroup
      AutoConfigurationEnabled: true

Outputs:
  RequiredTagsLambdaArn:
    Description: "RequiredTagsLambda ARN"
    Value: !GetAtt RequiredTagsLambda.Arn