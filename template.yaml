AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  config-lambda

  Sample SAM for AWS Config custom rule. This template creates a custom rule that checks whether the required tags are present on the resource.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    MemorySize: 128

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
Resources:
  RequiredTagsLambda:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: required-tags/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
      - x86_64
  
  AllowConfigInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt RequiredTagsLambda.Arn
      Principal: config.amazonaws.com

  ConfigurationRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      RoleARN: arn:aws:iam::${AWS::AccountId}:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true

  ConfigDeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: TwentyFour_Hours
      S3BucketName: !Ref ConfigBucket
      SnsTopicARN: !Ref ConfigTopic
  
  RequiredTagsCustomConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: RequiredTagsCustomConfigRule
      Description: Checks whether the required tags are present on the resource
      EvaluationModes:
        - Mode: DETECTIVE
      Scope:
        ComplianceResourceTypes:
          - AWS::AllSupported
      Source:
        Owner: CUSTOM_LAMBDA
        SourceIdentifier: !GetAtt RequiredTagsLambda.Arn
        SourceDetails:
          - EventSource: aws.config
            MessageType: ConfigurationItemChangeNotification

  ConfigTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: ConfigTopic
      TopicName: ConfigTopic

  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'config-bucket-${AWS::AccountId}'
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: ConfigBucket

  ConfigBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub 'arn:aws:s3:::${ConfigBucket}'
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub 'arn:aws:s3:::${ConfigBucket}/AWSLogs/${AWS::AccountId}/*'
          - Effect: Allow
            Principal:
              Service: config.amazonaws.com
            Action: s3:GetBucketPolicy
            Resource: !Sub 'arn:aws:s3:::${ConfigBucket}'

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  RequiredTagsLambda:
    Description: "RequiredTagsLambda ARN"
    Value: !GetAtt RequiredTagsLambda.Arn
